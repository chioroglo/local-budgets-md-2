// <auto-generated />
using System;
using MbdcLocalBudgetsInfrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MbdcLocalBudgetsInfrastructure.EfCore.Configurations.Migrations
{
    [DbContext(typeof(OlapDbContext))]
    [Migration("20241230190141_Timestamp")]
    partial class Timestamp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dwh")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("District", "dwh");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.Locality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Population")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ParentDistrictId");

                    b.ToTable("Locality", "dwh");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.OlapBudgetReport", b =>
                {
                    b.Property<Guid>("LocalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ActualExpenses")
                        .HasColumnType("bigint");

                    b.Property<long>("ActualIncome")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesDetailsCultureInvestments")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesDetailsFixedAssets")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesDetailsPublicWelfare")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesDetailsSalariesPaid")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesDetailsUtilityServices")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsGoodsAndServiceIncome")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsPropertyRentIncome")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsTaxesAssetIncomeTax")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsTaxesEntrepreneurshipTax")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsTaxesLandUseTax")
                        .HasColumnType("bigint");

                    b.Property<long>("IncomesDetailsTaxesPropertyTax")
                        .HasColumnType("bigint");

                    b.Property<long>("PlannedExpenses")
                        .HasColumnType("bigint");

                    b.Property<long>("PlannedIncome")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("LocalityId", "YearId", "DistrictId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("YearId");

                    b.ToTable("OlapBudgetReport", "dwh");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.Year", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Value");

                    b.ToTable("Year", "dwh", t =>
                        {
                            t.HasCheckConstraint("CK_Year_Epoch", "[Value] >= 1970");
                        });

                    b.HasData(
                        new
                        {
                            Value = 2000
                        },
                        new
                        {
                            Value = 2001
                        },
                        new
                        {
                            Value = 2002
                        },
                        new
                        {
                            Value = 2003
                        },
                        new
                        {
                            Value = 2004
                        },
                        new
                        {
                            Value = 2005
                        },
                        new
                        {
                            Value = 2006
                        },
                        new
                        {
                            Value = 2007
                        },
                        new
                        {
                            Value = 2008
                        },
                        new
                        {
                            Value = 2009
                        },
                        new
                        {
                            Value = 2010
                        },
                        new
                        {
                            Value = 2011
                        },
                        new
                        {
                            Value = 2012
                        },
                        new
                        {
                            Value = 2013
                        },
                        new
                        {
                            Value = 2014
                        },
                        new
                        {
                            Value = 2015
                        },
                        new
                        {
                            Value = 2016
                        },
                        new
                        {
                            Value = 2017
                        },
                        new
                        {
                            Value = 2018
                        },
                        new
                        {
                            Value = 2019
                        },
                        new
                        {
                            Value = 2020
                        },
                        new
                        {
                            Value = 2021
                        },
                        new
                        {
                            Value = 2022
                        },
                        new
                        {
                            Value = 2023
                        },
                        new
                        {
                            Value = 2024
                        });
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.Locality", b =>
                {
                    b.HasOne("MbdcLocalBudgetsDomain.Entities.Olap.District", "ParentDistrict")
                        .WithMany("Localities")
                        .HasForeignKey("ParentDistrictId");

                    b.Navigation("ParentDistrict");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.OlapBudgetReport", b =>
                {
                    b.HasOne("MbdcLocalBudgetsDomain.Entities.Olap.District", "District")
                        .WithMany("BudgetReports")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MbdcLocalBudgetsDomain.Entities.Olap.Locality", "Locality")
                        .WithMany("BudgetReports")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MbdcLocalBudgetsDomain.Entities.Olap.Year", "Year")
                        .WithMany("BudgetReports")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Locality");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.District", b =>
                {
                    b.Navigation("BudgetReports");

                    b.Navigation("Localities");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.Locality", b =>
                {
                    b.Navigation("BudgetReports");
                });

            modelBuilder.Entity("MbdcLocalBudgetsDomain.Entities.Olap.Year", b =>
                {
                    b.Navigation("BudgetReports");
                });
#pragma warning restore 612, 618
        }
    }
}
